@model Models.SOrder

@{
    ViewData["Title"] = "Create";
}

<h1>New Order</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="StoreNumber" class="control-label">Store</label>
                <select asp-for="StoreNumber" class="form-control">
                    @foreach (var item in ViewData["stores"] as IEnumerable<Models.Storefront>)
                    {
                        <option value="@item.StoreNumber">@item.StoreName</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label asp-for="CustNumber" class="control-label">Customer</label>
                <select asp-for="CustNumber" class="form-control">
                    @foreach (var item in ViewData["customers"] as IEnumerable<Models.Customer>)
                    {
                        <option value="@item.CustNumber">@item.CustName</option>
                    }
                </select>
            </div>
            <script>
                var rowNum = 0;
                function addRow(frm) {
                    rowNum++;
                    var row = `
                    <div class="${rowNum}">
                        <div class="form-group" >
                            <label asp-for='@ViewData["products.ProdId"]' class="control-label">Product</label>
                            <select name="productId${rowNum}" asp-for='@ViewData["products.ProdId"]' class="form-control">
                                @foreach (var item in ViewData["products"] as IEnumerable<Models.Product>)
                                {
                                    <option value="@item.ProdId">@item.ProdName</option>
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <label asp-for='@ViewData["lineItem.Quantity"]' class="control-label">Quantity</label>
                            <input type="number" min="1" value="1" step="1" pattern="\d+" name="lineQuant${rowNum}" asp-for='@ViewData["lineItem.Quantity"]' class= "form-control" />
                            <span asp-validation-for='@ViewData["lineItem.Quantity"]' class="text-danger"></span>
                        </div>
                        <input type="button" value="Remove" onclick="removeRow(${rowNum});">
                    </div>
                    `
                    //var row = '<p id="rowNum' + rowNum + '">Item quantity: <input type="text" name="qty[]" size="4" value="' + frm.add_qty.value + '"> Item name: <input type="text" name="name[]" value="' + frm.add_name.value + '"> <input type="button" value="Remove" onclick="removeRow(' + rowNum + ');"></p>';
                    $('#itemRows').append(row);
                }
                function removeRow(rnum) {
                    $("div").remove("." + rnum);
                }
            </script>
            <div id="itemRows">
                <div class="form-group">
                    <label asp-for='@ViewData["products.ProdId"]' class="control-label">Product</label>
                    <select asp-for='@ViewData["products.ProdId"]' class="form-control">
                        @foreach (var item in ViewData["products"] as IEnumerable<Models.Product>)
                        {
                            <option value="@item.ProdId">@item.ProdName</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label asp-for='@ViewData["lineItem.Quantity"]' class="control-label">Quantity</label>
                    <input type="number" min="1" value="1" step="1" pattern="\d+" asp-for='@ViewData["lineItem.Quantity"]' class="form-control" />
                    <span asp-validation-for='@ViewData["lineItem.Quantity"]' class="text-danger"></span>
                </div>
                <input onclick="addRow(this.div);" type="button" value="Add row" />
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
